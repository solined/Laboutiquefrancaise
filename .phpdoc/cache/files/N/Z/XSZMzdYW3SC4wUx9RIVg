1646515368
AwuilbDvXz%3Aea14f10881c29b855de08096689d89d8-088ab59ab3f8899db09ea2b1f90a9fe7
s:23732:"O:33:"phpDocumentor\Reflection\Php\File":12:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"088ab59ab3f8899db09ea2b1f90a9fe7";s:39:" phpDocumentor\Reflection\Php\File name";s:23:"CardSchemeValidator.php";s:39:" phpDocumentor\Reflection\Php\File path";s:60:"vendor/symfony/validator/Constraints/CardSchemeValidator.php";s:41:" phpDocumentor\Reflection\Php\File source";s:5099:"<?php

/*
 * This file is part of the Symfony package.
 *
 * (c) Fabien Potencier <fabien@symfony.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Symfony\Component\Validator\Constraints;

use Symfony\Component\Validator\Constraint;
use Symfony\Component\Validator\ConstraintValidator;
use Symfony\Component\Validator\Exception\UnexpectedTypeException;

/**
 * Validates that a card number belongs to a specified scheme.
 *
 * @author Tim Nagel <t.nagel@infinite.net.au>
 * @author Bernhard Schussek <bschussek@gmail.com>
 *
 * @see https://en.wikipedia.org/wiki/Payment_card_number
 * @see https://www.regular-expressions.info/creditcard.html
 */
class CardSchemeValidator extends ConstraintValidator
{
    protected $schemes = [
        // American Express card numbers start with 34 or 37 and have 15 digits.
        CardScheme::AMEX => [
            '/^3[47][0-9]{13}$/',
        ],
        // China UnionPay cards start with 62 and have between 16 and 19 digits.
        // Please note that these cards do not follow Luhn Algorithm as a checksum.
        CardScheme::CHINA_UNIONPAY => [
            '/^62[0-9]{14,17}$/',
        ],
        // Diners Club card numbers begin with 300 through 305, 36 or 38. All have 14 digits.
        // There are Diners Club cards that begin with 5 and have 16 digits.
        // These are a joint venture between Diners Club and MasterCard, and should be processed like a MasterCard.
        CardScheme::DINERS => [
            '/^3(?:0[0-5]|[68][0-9])[0-9]{11}$/',
        ],
        // Discover card numbers begin with 6011, 622126 through 622925, 644 through 649 or 65.
        // All have 16 digits.
        CardScheme::DISCOVER => [
            '/^6011[0-9]{12}$/',
            '/^64[4-9][0-9]{13}$/',
            '/^65[0-9]{14}$/',
            '/^622(12[6-9]|1[3-9][0-9]|[2-8][0-9][0-9]|91[0-9]|92[0-5])[0-9]{10}$/',
        ],
        // InstaPayment cards begin with 637 through 639 and have 16 digits.
        CardScheme::INSTAPAYMENT => [
            '/^63[7-9][0-9]{13}$/',
        ],
        // JCB cards beginning with 2131 or 1800 have 15 digits.
        // JCB cards beginning with 35 have 16 digits.
        CardScheme::JCB => [
            '/^(?:2131|1800|35[0-9]{3})[0-9]{11}$/',
        ],
        // Laser cards begin with either 6304, 6706, 6709 or 6771 and have between 16 and 19 digits.
        CardScheme::LASER => [
            '/^(6304|670[69]|6771)[0-9]{12,15}$/',
        ],
        // Maestro international cards begin with 675900..675999 and have between 12 and 19 digits.
        // Maestro UK cards begin with either 500000..509999 or 560000..699999 and have between 12 and 19 digits.
        CardScheme::MAESTRO => [
            '/^(6759[0-9]{2})[0-9]{6,13}$/',
            '/^(50[0-9]{4})[0-9]{6,13}$/',
            '/^5[6-9][0-9]{10,17}$/',
            '/^6[0-9]{11,18}$/',
        ],
        // All MasterCard numbers start with the numbers 51 through 55. All have 16 digits.
        // October 2016 MasterCard numbers can also start with 222100 through 272099.
        CardScheme::MASTERCARD => [
            '/^5[1-5][0-9]{14}$/',
            '/^2(22[1-9][0-9]{12}|2[3-9][0-9]{13}|[3-6][0-9]{14}|7[0-1][0-9]{13}|720[0-9]{12})$/',
        ],
        // Payment system MIR numbers start with 220, then 1 digit from 0 to 4, then 12 digits
        CardScheme::MIR => [
            '/^220[0-4][0-9]{12}$/',
        ],
        // All UATP card numbers start with a 1 and have a length of 15 digits.
        CardScheme::UATP => [
            '/^1[0-9]{14}$/',
        ],
        // All Visa card numbers start with a 4 and have a length of 13, 16, or 19 digits.
        CardScheme::VISA => [
            '/^4([0-9]{12}|[0-9]{15}|[0-9]{18})$/',
        ],
    ];

    /**
     * Validates a creditcard belongs to a specified scheme.
     *
     * @param mixed $value
     */
    public function validate($value, Constraint $constraint)
    {
        if (!$constraint instanceof CardScheme) {
            throw new UnexpectedTypeException($constraint, CardScheme::class);
        }

        if (null === $value || '' === $value) {
            return;
        }

        if (!is_numeric($value)) {
            $this->context->buildViolation($constraint->message)
                ->setParameter('{{ value }}', $this->formatValue($value))
                ->setCode(CardScheme::NOT_NUMERIC_ERROR)
                ->addViolation();

            return;
        }

        $schemes = array_flip((array) $constraint->schemes);
        $schemeRegexes = array_intersect_key($this->schemes, $schemes);

        foreach ($schemeRegexes as $regexes) {
            foreach ($regexes as $regex) {
                if (preg_match($regex, $value)) {
                    return;
                }
            }
        }

        $this->context->buildViolation($constraint->message)
            ->setParameter('{{ value }}', $this->formatValue($value))
            ->setCode(CardScheme::INVALID_FORMAT_ERROR)
            ->addViolation();
    }
}
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:1:{s:40:"\Symfony\Component\Validator\Constraints";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:40:"\Symfony\Component\Validator\Constraints";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"Constraints";}}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:1:{s:60:"\Symfony\Component\Validator\Constraints\CardSchemeValidator";O:35:"phpDocumentor\Reflection\Php\Class_":11:{s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:60:"\Symfony\Component\Validator\Constraints\CardSchemeValidator";s:36:" phpDocumentor\Reflection\Fqsen name";s:19:"CardSchemeValidator";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:59:"Validates that a card number belongs to a specified scheme.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:4:{i:0;O:45:"phpDocumentor\Reflection\DocBlock\Tags\Author":4:{s:7:" * name";s:6:"author";s:57:" phpDocumentor\Reflection\DocBlock\Tags\Author authorName";s:9:"Tim Nagel";s:58:" phpDocumentor\Reflection\DocBlock\Tags\Author authorEmail";s:23:"t.nagel@infinite.net.au";s:14:" * description";N;}i:1;O:45:"phpDocumentor\Reflection\DocBlock\Tags\Author":4:{s:7:" * name";s:6:"author";s:57:" phpDocumentor\Reflection\DocBlock\Tags\Author authorName";s:17:"Bernhard Schussek";s:58:" phpDocumentor\Reflection\DocBlock\Tags\Author authorEmail";s:19:"bschussek@gmail.com";s:14:" * description";N;}i:2;O:42:"phpDocumentor\Reflection\DocBlock\Tags\See":3:{s:7:" * name";s:3:"see";s:9:" * refers";O:52:"phpDocumentor\Reflection\DocBlock\Tags\Reference\Url":1:{s:57:" phpDocumentor\Reflection\DocBlock\Tags\Reference\Url uri";s:49:"https://en.wikipedia.org/wiki/Payment_card_number";}s:14:" * description";N;}i:3;O:42:"phpDocumentor\Reflection\DocBlock\Tags\See":3:{s:7:" * name";s:3:"see";s:9:" * refers";O:52:"phpDocumentor\Reflection\DocBlock\Tags\Reference\Url":1:{s:57:" phpDocumentor\Reflection\DocBlock\Tags\Reference\Url uri";s:52:"https://www.regular-expressions.info/creditcard.html";}s:14:" * description";N;}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:39:"Symfony\Component\Validator\Constraints";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:3:{s:10:"Constraint";s:38:"Symfony\Component\Validator\Constraint";s:19:"ConstraintValidator";s:47:"Symfony\Component\Validator\ConstraintValidator";s:23:"UnexpectedTypeException";s:61:"Symfony\Component\Validator\Exception\UnexpectedTypeException";}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:18;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:0;s:43:" phpDocumentor\Reflection\Php\Class_ parent";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:48:"\Symfony\Component\Validator\ConstraintValidator";s:36:" phpDocumentor\Reflection\Fqsen name";s:19:"ConstraintValidator";}s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:0:{}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:1:{s:70:"\Symfony\Component\Validator\Constraints\CardSchemeValidator::$schemes";O:37:"phpDocumentor\Reflection\Php\Property":8:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:70:"\Symfony\Component\Validator\Constraints\CardSchemeValidator::$schemes";s:36:" phpDocumentor\Reflection\Fqsen name";s:7:"schemes";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";N;s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";s:3006:"[
    // American Express card numbers start with 34 or 37 and have 15 digits.
    \Symfony\Component\Validator\Constraints\CardScheme::AMEX => ['/^3[47][0-9]{13}$/'],
    // China UnionPay cards start with 62 and have between 16 and 19 digits.
    // Please note that these cards do not follow Luhn Algorithm as a checksum.
    \Symfony\Component\Validator\Constraints\CardScheme::CHINA_UNIONPAY => ['/^62[0-9]{14,17}$/'],
    // Diners Club card numbers begin with 300 through 305, 36 or 38. All have 14 digits.
    // There are Diners Club cards that begin with 5 and have 16 digits.
    // These are a joint venture between Diners Club and MasterCard, and should be processed like a MasterCard.
    \Symfony\Component\Validator\Constraints\CardScheme::DINERS => ['/^3(?:0[0-5]|[68][0-9])[0-9]{11}$/'],
    // Discover card numbers begin with 6011, 622126 through 622925, 644 through 649 or 65.
    // All have 16 digits.
    \Symfony\Component\Validator\Constraints\CardScheme::DISCOVER => ['/^6011[0-9]{12}$/', '/^64[4-9][0-9]{13}$/', '/^65[0-9]{14}$/', '/^622(12[6-9]|1[3-9][0-9]|[2-8][0-9][0-9]|91[0-9]|92[0-5])[0-9]{10}$/'],
    // InstaPayment cards begin with 637 through 639 and have 16 digits.
    \Symfony\Component\Validator\Constraints\CardScheme::INSTAPAYMENT => ['/^63[7-9][0-9]{13}$/'],
    // JCB cards beginning with 2131 or 1800 have 15 digits.
    // JCB cards beginning with 35 have 16 digits.
    \Symfony\Component\Validator\Constraints\CardScheme::JCB => ['/^(?:2131|1800|35[0-9]{3})[0-9]{11}$/'],
    // Laser cards begin with either 6304, 6706, 6709 or 6771 and have between 16 and 19 digits.
    \Symfony\Component\Validator\Constraints\CardScheme::LASER => ['/^(6304|670[69]|6771)[0-9]{12,15}$/'],
    // Maestro international cards begin with 675900..675999 and have between 12 and 19 digits.
    // Maestro UK cards begin with either 500000..509999 or 560000..699999 and have between 12 and 19 digits.
    \Symfony\Component\Validator\Constraints\CardScheme::MAESTRO => ['/^(6759[0-9]{2})[0-9]{6,13}$/', '/^(50[0-9]{4})[0-9]{6,13}$/', '/^5[6-9][0-9]{10,17}$/', '/^6[0-9]{11,18}$/'],
    // All MasterCard numbers start with the numbers 51 through 55. All have 16 digits.
    // October 2016 MasterCard numbers can also start with 222100 through 272099.
    \Symfony\Component\Validator\Constraints\CardScheme::MASTERCARD => ['/^5[1-5][0-9]{14}$/', '/^2(22[1-9][0-9]{12}|2[3-9][0-9]{13}|[3-6][0-9]{14}|7[0-1][0-9]{13}|720[0-9]{12})$/'],
    // Payment system MIR numbers start with 220, then 1 digit from 0 to 4, then 12 digits
    \Symfony\Component\Validator\Constraints\CardScheme::MIR => ['/^220[0-4][0-9]{12}$/'],
    // All UATP card numbers start with a 1 and have a length of 15 digits.
    \Symfony\Component\Validator\Constraints\CardScheme::UATP => ['/^1[0-9]{14}$/'],
    // All Visa card numbers start with a 4 and have a length of 13, 16, or 19 digits.
    \Symfony\Component\Validator\Constraints\CardScheme::VISA => ['/^4([0-9]{12}|[0-9]{15}|[0-9]{18})$/'],
]";s:45:" phpDocumentor\Reflection\Php\Property static";b:0;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:29;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:43:" phpDocumentor\Reflection\Php\Property type";N;}}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:1:{s:72:"\Symfony\Component\Validator\Constraints\CardSchemeValidator::validate()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:53:"Validates a creditcard belongs to a specified scheme.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:5:"value";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:45;s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:94;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:72:"\Symfony\Component\Validator\Constraints\CardSchemeValidator::validate()";s:36:" phpDocumentor\Reflection\Fqsen name";s:8:"validate";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:2:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:5:"value";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:10:"constraint";s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:39:"\Symfony\Component\Validator\Constraint";s:36:" phpDocumentor\Reflection\Fqsen name";s:10:"Constraint";}}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:99;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:27;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}}";